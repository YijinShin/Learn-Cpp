/* [ TCP school C++ 60 part]
TOPIC: 가상 함수 (virtual function) / 동적 바인딩 

* 가상 함수란
	- 파생 클래스에서 자신을 재정의 해줄 것으로 기대하는 [ 맴버 함수 ] 
	- 즉, 자신을 호출하는 객체의 동적 타입에 의해 -> 실제로 호출될 함수 내용이 결정됨 
	
	- 이왕이면 파생 클래스 쪽에서도 그 오버라이딩 한 함수 앞에 virtual 붙여주면 좋다. 이게 가상 함수 오버라이딩한거라는걸 알리기 위해. 

* 동적 바인딩(dynamic binding)
	
	* 정적 바인딩(static binding)
	원래 함수를 호출하는 코드 -> 컴파일 타임에 고정된 메모리 주소로 변환된다.  == 정적 바인딩 (static binding) = 초기 바인딩(early binding)이라고 함. 
	가상함수 제외한 모든 맴버 함수는 정적 바인딩함. 

	그러나 가상함수호출은 => 컴파일러가 어떤 함수를 호출해야하는지 미리 알 수 없다. 
						=> 가상함수는 프로그램이 실행될 때 객체를 결정함.
							즉, 컴파일 타임에는 객체를 특정할 수 없다. 
							따라서 가상 함수의 호출은 런타임에 올바른 함수가 실행될 수 있도록 해야한다.
							=> 이걸 동적바인딩, 지연바인딩(late binding)이라고 함. 

							
* 가상함수 동작원리 
	- 


*/


