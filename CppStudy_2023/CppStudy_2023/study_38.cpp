/* [ C++ study with TCP school 38part]
topic: 참조자  

* 참조자와 포인터 
	참조에 의한 전달(call by reference)은포인터를 사용해도 똑같은 결과를 얻을 수 있습니다.
	포인터를 사용하는 방법과 참조자를 사용하는 방법 모두 결과는 같으며, 구문 형태상의 차이점만이 존재합니다.

* 참조자 사용시 장점..?
	장점
	- 함수 내에서 참조 연산자(*)를 사용하지 않으므로, 함수 내부의 코드가 깔끔하고 직관적이 됩니다.

	but
	- 원본값을 수정하지 않으면 그냥 값을 전달하고, 
	- 원본값에 접근해야한다면 pointer를 쓰는게 더 직관적임 ( 시각적으로 )
------------------------------------------------------------------------------------------------------------

* 참조자와 구조체 
	사실 참조자는 크기가 큰 구조체나 클래스를 다룰 때에만 사용하는 것이 좋습니다.
	
	원본 값을 바꿀 일이 없는 경우 
		->  const int& value 이렇게 const사용하기 
				단순히 값을 가지고 연산없이 그냥 출력하는데만 쓴다거나.. 이런거면 const 참조자를 써. 
			  이유는 잘 몰르겠는데 어쨌든 값을 복사해서 매게변수로 주는경우, 임시 메모리를 쓰긴 쓰는거다. 
			  매게변수가 한두개면 몰라도 아주 크기가 큰 구조체라면 복사해서 주고받는거 자체가 낭비일수 있을듯.
			  그래서 그냥 원본값 주소를, 못바꾸게 const로 해두고 넘겨주는 거같다. 
	원본 값을 바꿔야 하는 경우
		-> int& value 이렇게 쓰거나, 구조체 포인터를 사용하기 

*/

#include <iostream>

using namespace std;

int main() {

	// [ 참조자와 포인터 선언 및 간단한 사용 ]
	{
		int num = 10;

		int& num_ref = num;		// 참조자 
		int* num_ptr = &num;	// 포인터

		//참조자든, 포인터든 둘다 값 고치면 원본값 고쳐짐
		num_ref = num_ref + 10;
		cout << "num 원본값: " << num << endl;
		*num_ptr = *num_ptr + 10;
		cout << "num 원본값: " << *num_ptr << endl;
	}

	
}
